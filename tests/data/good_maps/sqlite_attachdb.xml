<Map srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over" minimum-version="0.7.2">

<Style name="world">
  <Rule>
    <PolygonSymbolizer fill="green"/>
  </Rule>
</Style>

<Layer name="world" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over">
    <StyleName>world</StyleName>
    <Datasource>
       <Parameter name="type">sqlite</Parameter>
       <Parameter name="file">../sqlite/world.sqlite</Parameter>
       <!-- should work with or without leveraging and index -->
       <Parameter name="use_spatial_index">true</Parameter>

       <!-- key_field is required if a subquery AND spatial index
         is used. see: https://github.com/mapnik/mapnik/issues/821
       -->
       <Parameter name="key_field">OGC_FID</Parameter>
       <!--
       <Parameter name="table">(SELECT * FROM world_merc)</Parameter>
       -->
       <Parameter name="table">(SELECT *,world_merc.rowid FROM world_merc INNER JOIN business ON business.ISO3 = world_merc.iso3) as s</Parameter>

       <!--
       sqlite3 world.sqlite
       ATTACH DATABASE 'business.sqlite' AS business;
       SELECT count(*) FROM "10m_admin_0_countries" INNER JOIN business ON business.ISO3 = iso_a3;
       -->
       <Parameter name="attachdb">business@business.sqlite</Parameter>
       
    </Datasource>
  </Layer>

</Map>
